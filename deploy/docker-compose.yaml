services:
  traidano:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "9494:9494"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - OTLP_ENDPOINT=http://localhost:4317
      - BASE_URL=https://paper-api.alpaca.markets/v2
      - STREAM_URL=https://paper-api.alpaca.markets/v2
      - API_KEY=PKGA4DTIP5MZM8H0KQJL
      - SECRET_KEY=bEBazJLr2BdbyKDLNMPQKrSxGzwELRBYGICg5Jh1
    depends_on:
      - grafana
      - db
      - otel-collector
    networks:
      - app-network

  jeager:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:8.2.2
    volumes:
      - ./prometheus/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./prometheus/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./prometheus/traidano-dashboard.json:/var/lib/grafana/dashboards/traidano-dashboard.json
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    networks:
      - app-network

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 5s
        timeout: 5s
        retries: 5

volumes:
  postgres_data:
    driver: local


networks:
  app-network:
    driver: bridge